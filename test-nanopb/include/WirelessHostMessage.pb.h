/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_WIRELESSHOSTMESSAGE_PB_H_INCLUDED
#define PB_WIRELESSHOSTMESSAGE_PB_H_INCLUDED
#include <pb.h>
#include "ClientInfo.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _WirelessHostMessage_Type { 
    WirelessHostMessage_Type_PING = 0, 
    WirelessHostMessage_Type_HANDSHAKE_ASSIGNMENT = 1, 
    WirelessHostMessage_Type_RESET_REQUEST = 2, 
    WirelessHostMessage_Type_ARBITRATION_CONFIRMATION = 3 
} WirelessHostMessage_Type;

/* Struct definitions */
/* A message sent by Host to Client via wireless connection. */
typedef struct _WirelessHostMessage { 
    WirelessHostMessage_Type type; /* The message type. */
    pb_size_t which_content;
    union {
        ClientInfo assignment;
    } content; 
} WirelessHostMessage;


/* Helper constants for enums */
#define _WirelessHostMessage_Type_MIN WirelessHostMessage_Type_PING
#define _WirelessHostMessage_Type_MAX WirelessHostMessage_Type_ARBITRATION_CONFIRMATION
#define _WirelessHostMessage_Type_ARRAYSIZE ((WirelessHostMessage_Type)(WirelessHostMessage_Type_ARBITRATION_CONFIRMATION+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define WirelessHostMessage_init_default         {_WirelessHostMessage_Type_MIN, 0, {ClientInfo_init_default}}
#define WirelessHostMessage_init_zero            {_WirelessHostMessage_Type_MIN, 0, {ClientInfo_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define WirelessHostMessage_type_tag             1
#define WirelessHostMessage_assignment_tag       2

/* Struct field encoding specification for nanopb */
#define WirelessHostMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (content,assignment,content.assignment),   2)
#define WirelessHostMessage_CALLBACK NULL
#define WirelessHostMessage_DEFAULT NULL
#define WirelessHostMessage_content_assignment_MSGTYPE ClientInfo

extern const pb_msgdesc_t WirelessHostMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define WirelessHostMessage_fields &WirelessHostMessage_msg

/* Maximum encoded size of messages (where known) */
#if defined(ClientInfo_size)
#define WirelessHostMessage_size                 (8 + ClientInfo_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
