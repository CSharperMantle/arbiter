/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_CLIENTINFO_PB_H_INCLUDED
#define PB_CLIENTINFO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Represent a general Client and its relevant information. */
typedef struct _ClientInfo { 
    uint32_t address_ipv4; /* The intranet address. */
    uint32_t id; /* The ID. */
    uint32_t latency; /* The ping latency in millisec and rounded. */
} ClientInfo;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ClientInfo_init_default                  {0, 0, 0}
#define ClientInfo_init_zero                     {0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ClientInfo_address_ipv4_tag              1
#define ClientInfo_id_tag                        2
#define ClientInfo_latency_tag                   3

/* Struct field encoding specification for nanopb */
#define ClientInfo_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED32,  address_ipv4,      1) \
X(a, STATIC,   SINGULAR, UINT32,   id,                2) \
X(a, STATIC,   SINGULAR, UINT32,   latency,           3)
#define ClientInfo_CALLBACK NULL
#define ClientInfo_DEFAULT NULL

extern const pb_msgdesc_t ClientInfo_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ClientInfo_fields &ClientInfo_msg

/* Maximum encoded size of messages (where known) */
#define ClientInfo_size                          17

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
