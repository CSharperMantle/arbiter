/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_WIRELESSCLIENTMESSAGE_PB_H_INCLUDED
#define PB_WIRELESSCLIENTMESSAGE_PB_H_INCLUDED
#include <pb.h>
#include "ClientInfo.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _WirelessClientMessage_Type { 
    WirelessClientMessage_Type_PONG = 0, 
    WirelessClientMessage_Type_HANDSHAKE_ASSIGNMENT_CONFIRMATION = 1, 
    WirelessClientMessage_Type_RESET_CONFIRMATION = 2, 
    WirelessClientMessage_Type_HANDSHAKE_REQUEST = 3, 
    WirelessClientMessage_Type_ARBITRATION_REQUEST = 4 
} WirelessClientMessage_Type;

/* Struct definitions */
/* A message sent by Client to Host via wireless connection. */
typedef struct _WirelessClientMessage { 
    WirelessClientMessage_Type type; /* The message type. */
    pb_size_t which_content;
    union {
        ClientInfo assignment;
    } content; /* The assignment to be acknowledged. */
} WirelessClientMessage;


/* Helper constants for enums */
#define _WirelessClientMessage_Type_MIN WirelessClientMessage_Type_PONG
#define _WirelessClientMessage_Type_MAX WirelessClientMessage_Type_ARBITRATION_REQUEST
#define _WirelessClientMessage_Type_ARRAYSIZE ((WirelessClientMessage_Type)(WirelessClientMessage_Type_ARBITRATION_REQUEST+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define WirelessClientMessage_init_default       {_WirelessClientMessage_Type_MIN, 0, {ClientInfo_init_default}}
#define WirelessClientMessage_init_zero          {_WirelessClientMessage_Type_MIN, 0, {ClientInfo_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define WirelessClientMessage_type_tag           1
#define WirelessClientMessage_assignment_tag     2

/* Struct field encoding specification for nanopb */
#define WirelessClientMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (content,assignment,content.assignment),   2)
#define WirelessClientMessage_CALLBACK NULL
#define WirelessClientMessage_DEFAULT NULL
#define WirelessClientMessage_content_assignment_MSGTYPE ClientInfo

extern const pb_msgdesc_t WirelessClientMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define WirelessClientMessage_fields &WirelessClientMessage_msg

/* Maximum encoded size of messages (where known) */
#if defined(ClientInfo_size)
#define WirelessClientMessage_size               (8 + ClientInfo_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
