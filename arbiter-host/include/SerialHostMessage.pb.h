/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_SERIALHOSTMESSAGE_PB_H_INCLUDED
#define PB_SERIALHOSTMESSAGE_PB_H_INCLUDED
#include <pb.h>
#include "ClientInfo.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _SerialHostMessage_Type { 
    SerialHostMessage_Type_NONE_ = 0, 
    SerialHostMessage_Type_QUERY_CONFIRMATION = 1, 
    SerialHostMessage_Type_RESET_CONFIRMATION = 2, 
    SerialHostMessage_Type_ARBITRATION_DONE = 3 
} SerialHostMessage_Type;

/* Struct definitions */
/* A list of clients. */
typedef struct _ClientsList { 
    pb_callback_t client_info; 
} ClientsList;

/* A message sent by Host to Monitor via a Serial cable/port. */
typedef struct _SerialHostMessage { 
    SerialHostMessage_Type type; /* The message type. */
    pb_size_t which_content;
    union {
        ClientsList clients;
        ClientInfo arbitration;
    } content; /* The result sent with QUERY_CONFIRMATION. */
} SerialHostMessage;


/* Helper constants for enums */
#define _SerialHostMessage_Type_MIN SerialHostMessage_Type_NONE_
#define _SerialHostMessage_Type_MAX SerialHostMessage_Type_ARBITRATION_DONE
#define _SerialHostMessage_Type_ARRAYSIZE ((SerialHostMessage_Type)(SerialHostMessage_Type_ARBITRATION_DONE+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ClientsList_init_default                 {{{NULL}, NULL}}
#define SerialHostMessage_init_default           {_SerialHostMessage_Type_MIN, 0, {ClientsList_init_default}}
#define ClientsList_init_zero                    {{{NULL}, NULL}}
#define SerialHostMessage_init_zero              {_SerialHostMessage_Type_MIN, 0, {ClientsList_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define ClientsList_client_info_tag              1
#define SerialHostMessage_type_tag               1
#define SerialHostMessage_clients_tag            2
#define SerialHostMessage_arbitration_tag        3

/* Struct field encoding specification for nanopb */
#define ClientsList_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  client_info,       1)
#define ClientsList_CALLBACK pb_default_field_callback
#define ClientsList_DEFAULT NULL
#define ClientsList_client_info_MSGTYPE ClientInfo

#define SerialHostMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (content,clients,content.clients),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (content,arbitration,content.arbitration),   3)
#define SerialHostMessage_CALLBACK NULL
#define SerialHostMessage_DEFAULT NULL
#define SerialHostMessage_content_clients_MSGTYPE ClientsList
#define SerialHostMessage_content_arbitration_MSGTYPE ClientInfo

extern const pb_msgdesc_t ClientsList_msg;
extern const pb_msgdesc_t SerialHostMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ClientsList_fields &ClientsList_msg
#define SerialHostMessage_fields &SerialHostMessage_msg

/* Maximum encoded size of messages (where known) */
/* ClientsList_size depends on runtime parameters */
/* SerialHostMessage_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
