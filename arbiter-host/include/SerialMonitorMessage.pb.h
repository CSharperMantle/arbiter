/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_SERIALMONITORMESSAGE_PB_H_INCLUDED
#define PB_SERIALMONITORMESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _SerialMonitorMessage_Type { 
    SerialMonitorMessage_Type_NONE_ = 0, 
    SerialMonitorMessage_Type_QUERY_REQUEST = 1, 
    SerialMonitorMessage_Type_RESET_REQUEST = 2 
} SerialMonitorMessage_Type;

/* Struct definitions */
/* A message sent by Monitor to Host via a Serial cable/port. */
typedef struct _SerialMonitorMessage { 
    SerialMonitorMessage_Type type; /* The message type. */
} SerialMonitorMessage;


/* Helper constants for enums */
#define _SerialMonitorMessage_Type_MIN SerialMonitorMessage_Type_NONE_
#define _SerialMonitorMessage_Type_MAX SerialMonitorMessage_Type_RESET_REQUEST
#define _SerialMonitorMessage_Type_ARRAYSIZE ((SerialMonitorMessage_Type)(SerialMonitorMessage_Type_RESET_REQUEST+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SerialMonitorMessage_init_default        {_SerialMonitorMessage_Type_MIN}
#define SerialMonitorMessage_init_zero           {_SerialMonitorMessage_Type_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define SerialMonitorMessage_type_tag            1

/* Struct field encoding specification for nanopb */
#define SerialMonitorMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1)
#define SerialMonitorMessage_CALLBACK NULL
#define SerialMonitorMessage_DEFAULT NULL

extern const pb_msgdesc_t SerialMonitorMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SerialMonitorMessage_fields &SerialMonitorMessage_msg

/* Maximum encoded size of messages (where known) */
#define SerialMonitorMessage_size                2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
