syntax = "proto3";

/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2022 Rong "Mantle" Bao.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so, subject
 * to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies
 * or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

import "ClientInfo.proto";

/*
 * A list of clients.
 */
message ClientsList {
  repeated ClientInfo client_info = 1;
}

/*
 * A message sent by Host to Monitor via a Serial cable/port.
 */
message SerialHostMessage {
  enum Type {
    NONE_ = 0;  // Placeholder value.
    QUERY_CONFIRMATION = 1;  // A reply to a Query message.
    RESET_CONFIRMATION = 2;  // A reply to a Reset message.
    ARBITRATION_DONE = 3;  // A message to indicate a settled arbitration.
  }
  Type type = 1;  // The message type.
  
  oneof content {
    ClientsList clients = 2;  // The result sent with QUERY_CONFIRMATION.
    ClientInfo arbitration = 3;  // The result sent with ARBITRATION_DONE.
  }
}
